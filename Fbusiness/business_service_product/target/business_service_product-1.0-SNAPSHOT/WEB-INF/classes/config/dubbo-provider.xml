<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task
   		http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://code.alibabatech.com/schema/dubbo        
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
		
	<!-- Dubbo提供方 -->
	<!-- 1：名称  计算机区别不同服务  唯一 -->
	<dubbo:application name="business_service_product"/>
	<!-- 2：设置注册中心  地址  zookeeper在哪里  protocal -配置协议zookeeper、 redis 等...  -->
 	<!--<dubbo:registry address="192.168.200.128:2181,192.168.200.129:2181,192.168.200.130:2181" protocol="zookeeper"/> -->
	                   <!--集群版-->
	<!--<dubbo:registry address="192.168.200.128:2181" protocol="zookeeper"/>--><!--单机版-->
	<dubbo:registry address="N/A"/>
	<!-- 3：dubbo://192.168.39.80:20880  默认  设置提供服务的端口号，  name配置的是协议  协议：http、rmp、dubbo、等
	对于本项目,注册中心zookeeper为单机版，对于不同的服务就使用端口号区分 -->
	<dubbo:protocol port="20881" name="dubbo"/>
	<!-- 4： 暴露实现类-->     <!--注解式开发中，这个实现类实例化，写在实现类的servcie注解处@Service("testTbService") -->
     <!--品牌管理-->
	<dubbo:service interface="cn.lili.core.service.product.BrandService" ref="brandService"/>
	<!--图片上传-->
	<dubbo:service interface="cn.lili.core.service.product.UploadService" ref="uploadService"/>
	<!--商品管理-->
	<dubbo:service interface="cn.lili.core.service.product.ProductService" ref="productService"/>
	<!--库存管理 -->
    <dubbo:service interface="cn.lili.core.service.product.SkuService" ref="skuService"/>
	<!--cob购物车-->
    <dubbo:service interface="cn.lili.core.service.cob.BuyerService" ref="buyerService"/>
	<!--session共享-->
	<dubbo:service interface="cn.lili.core.service.cob.user.SessionProvider" ref="sessionProvider"/>

	<!--test-->
	<dubbo:service interface="cn.lili.core.service.TestTbService" ref="testTbService"/>

</beans>
